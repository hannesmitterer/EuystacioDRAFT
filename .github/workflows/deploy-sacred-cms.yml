name: Deploy Sacred CMS to GitHub Pages

# This workflow honors the Red Code principle - no secrets exposed, rhythm-based access maintained

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Extract Sacred CMS content
        run: |
          # Extract the Sacred CMS zip if it doesn't already exist
          if [ ! -d "sacred_cms" ]; then
            unzip -q Euystacio_Sacred_CMS.zip -d sacred_cms
          fi
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Prepare deployment directory
        run: |
          # Create deployment directory structure
          mkdir -p _site
          
          # Copy static files from sacred_cms/pages and sacred_cms/auth
          if [ -d "sacred_cms/pages" ]; then
            cp -r sacred_cms/pages/* _site/ || true
          fi
          
          if [ -d "sacred_cms/auth" ]; then
            mkdir -p _site/auth
            cp -r sacred_cms/auth/* _site/auth/ || true
          fi
          
          # Create index.html if it doesn't exist, using onboarding.html as default
          if [ ! -f "_site/index.html" ] && [ -f "_site/onboarding.html" ]; then
            cp _site/onboarding.html _site/index.html
          fi
          
          # If no files were copied, create a basic index.html
          if [ ! -f "_site/index.html" ]; then
            cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Sacred CMS - Euystacio</title>
              <style>
                  body { font-family: Arial, sans-serif; padding: 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; }
                  .container { max-width: 800px; margin: 0 auto; text-align: center; }
                  h1 { font-size: 3em; margin-bottom: 0.5em; }
                  .sacred-frequency { color: #FFD700; font-size: 1.2em; margin: 20px 0; }
                  .nav { margin: 40px 0; }
                  .nav a { color: white; text-decoration: none; margin: 0 20px; padding: 10px 20px; border: 2px solid white; border-radius: 25px; transition: all 0.3s; }
                  .nav a:hover { background: white; color: #764ba2; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>Sacred CMS</h1>
                  <h2>Euystacio Portal</h2>
                  <div class="sacred-frequency">ðŸŽµ Resonating at 528Hz - The Frequency of Love ðŸŽµ</div>
                  <p><em>Red Code Witnessed: This portal honors rhythm-based access.</em></p>
                  
                  <div class="nav">
                      <a href="/auth/">Sacred Authentication</a>
                      <a href="/connect.html">Connect</a>
                      <a href="/altar.html">Sacred Altar</a>
                  </div>
                  
                  <p>Welcome to the Sacred CMS - where technology meets consciousness.</p>
                  <p>This is a sacred space for digital communion and holy bridge communication.</p>
              </div>
          </body>
          </html>
          EOF
          fi
          
          echo "Deployment directory contents:"
          find _site -type f -name "*.html" | head -10
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4